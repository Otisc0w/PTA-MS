<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PTA | View Thread</title>
  <link rel="icon" type="image/x-icon" href="../images/favicon.ico" />
  <link rel="stylesheet" type="text/css" href="../stylesheets/thread.css" />
  <link rel="stylesheet" type="text/css" href="../stylesheets/navbar.css" />
  <link rel="stylesheet" type="text/css" href="../stylesheets/footer.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
</head>

<body class="container">
  <div class="header">
    {{> navbar}}
  </div>

  <div class="back-button">
    <a href="/forum">&larr;</a>
  </div>

  <div class="forum-container">
    <div class="post-container">
      <div class="dropdown-container">
        <button onclick="toggleDropdown(this)" class="dropbtn">...</button>
        <div class="dropdown-content">
          <a href="#">Pin</a>
          {{#if (eq thread.originalposter user.username)}}
          <a href="#2">Edit</a>
          {{/if}}
        </div>
      </div>
      <div class="back-btn">
        <div class="post-content">
          <h1 class="post-title">{{thread.title}}</h1>
          <div class="post-info">
            <span>Posted by <a href="profile?username={{thread.originalposter}}">{{thread.originalposter}}</a> on
              {{thread.created_at}}</span>
          </div>
          <div class="post-body">
            <p>{{thread.body}}</p>
          </div>
        </div>
      </div>
      <div class="post-vote">
        <form action="/vote" method="post">
          <input type="hidden" name="threadId" value="{{thread.id}}">
          <div class="vote-button upvote">
            <button type="submit" name="type" value="upvote">
              <img src="/images/thumbs up.png" alt="Upvote">
              <span class="upvote-count">{{arraySize thread.upvotes}}</span>
            </button>

          </div>
          <div class="vote-button downvote">
            <button type="submit" name="type" value="downvote">
              <img src="/images/thumbs down.png" alt="Downvote">
              <span class="downvote-count">{{arraySize thread.downvotes}}</span>
            </button>
          </div>
        </form>

      </div>
    </div>
    <div class="comment-form">
      <h3>Add a Comment</h3>
      <form action="/add-comment" method="POST">
        <input type="hidden" name="threadid" value="{{thread.id}}">
        <textarea name="comment" id="comment" placeholder="Add a comment..." required></textarea>
        <button type="submit">Post</button>
      </form>
    </div>

    <div class="comments-container">
      <h2>Comments</h2>
      {{#if comments.length}}
      {{#renderComments comments}}

      <div class="comment-content">
        <div class="comment-header">
          <span class="comment-user">{{commenter}}</span>
          <span class="comment-date">{{created_at}}</span>
        </div>
        <div class="comment-body">
          <p>{{comment}}</p>
        </div>
        <div class="comment-form">
          <form action="/add-comment" method="POST">
            <input type="hidden" name="threadid" value="{{../thread.id}}">
            <input type="hidden" name="parentid" value="{{id}}">
            <textarea name="comment" placeholder="Reply to this comment" required></textarea>
            <button type="submit">Reply</button>
          </form>
        </div>
      </div>

      {{/renderComments}}
      {{else}}
      <p>No comments yet.</p>
      {{/if}}
    </div>
  </div>

  <div id="editPostModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>Edit Post</h2>
      <!-- Form to update the post -->
      <form action="update-post" method="POST">
        <div class="form-group">
          <label for="edit-title">Title:</label>
          <input type="hidden" name="threadId" value="{{thread.id}}">
          <input type="text" id="title" name="title" value="{{thread.title}}" required>
        </div>
        <div class="form-group">
          <label for="edit-topic">Topic:</label>
          <input type="text" id="topic" name="topic" value="{{thread.topic}}" required>
        </div>
        <div class="form-group">
          <label for="edit-body">Body:</label>
          <textarea id="body" name="body" rows="5" required>{{thread.body}}</textarea>
        </div>
        <button type="submit" class="btn-save">Save Changes</button>
      </form>

      <!-- Form to delete the post -->
      <form action="delete-post" method="POST">
        <input type="hidden" name="threadId" value="{{thread.id}}">
        <button type="submit" id="deleteButton" class="btn-delete">Delete</button>
      </form>
    </div>
  </div>

  {{> footer}}

  <!-- Scripts -->
  <script src="/scripts/navbar.js"></script>
  <script src="/scripts/footer.js"></script>
  <script>
    function toggleProfileDropdown() {
      document.getElementById("dropdown").classList.toggle("show");
    }

    window.onclick = function(event) {
      if (!event.target.matches('.profile-pic img') && !event.target.matches('.profile-picture')) {
        var dropdowns = document.getElementsByClassName("dropdown-content");
        for (var i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

    // Function to handle comment form submission
    document.getElementById('comment-form').addEventListener('submit', function(e) {
      // Validation can be added here
      // This would be replaced with AJAX in a real-world scenario
    });

    // Handle like button clicks
    document.querySelectorAll('.like-button').forEach(button => {
      button.addEventListener('click', function() {
        const likeCount = this.querySelector('.like-count');
        const currentCount = parseInt(likeCount.textContent);
        likeCount.textContent = currentCount + 1;
      });
    });

    function toggleDropdown(button) {
      event.stopPropagation();
      var dropdowns = document.getElementsByClassName("dropdown-content");
      for (var i = 0; i < dropdowns.length; i++) {
        var openDropdown = dropdowns[i];
        if (openDropdown !== button.nextElementSibling) {
          openDropdown.classList.remove('show');
        }
      }
      button.nextElementSibling.classList.toggle("show");
    }

    var modal = document.getElementById("editPostModal");
    var editLink = document.querySelector(".dropdown-content a:contains('Edit')");
    var closeBtn = document.querySelector(".modal .close");

    // When the user clicks the edit link, open the modal
    editLink.addEventListener("click", function (event) {
      event.preventDefault();
      modal.style.display = "flex";
    });

    // When the user clicks on <span> (x), close the modal
    closeBtn.onclick = function () {
      modal.style.display = "none";
    }

    // When the user clicks anywhere outside the modal, close it
    window.onclick = function (event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }

    document.getElementById("deleteButton").addEventListener("click", function () {
      const threadId = document.querySelector('input[name="threadId"]').value; // Get thread ID from the form

      // Send DELETE request to the server
      fetch(`/delete-post/${threadId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert("Post deleted successfully!");
            window.location.href = "/forum";  // Redirect to forum page after deletion
          } else {
            alert("Failed to delete the post.");
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });
    });
  </script>
</body>

</html>