<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PTA | Reports</title>
  <link rel="icon" type="image/x-icon" href="../images/favicon.ico" />
  <link rel="stylesheet" type="text/css" href="../stylesheets/analytics.css" />
  <link rel="stylesheet" type="text/css" href="../stylesheets/navbar.css" />
  <link rel="stylesheet" type="text/css" href="../stylesheets/footer.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
</head>

{{#if user.ptaverified}}

<body class="container">
  <div class="header">
    {{> navbar}}
  </div>

  <div class="analytics-title">
    <div class="analytics-subtitle">
      <h1>PTA Reports</h1>
      <p>Gain Insights into the Overall Performance, Financial Health, and Membership Trends of the Philippine Taekwondo Association.</p>
    </div>
  </div>

  <div class="reports-container">
    <h1>Admin Reports</h1>

    <div class="report-tabs">
      <button class="tablink" onclick="openReport(event, 'payments')">Payments/Transactions</button>
      <button class="tablink" onclick="openReport(event, 'membership')">Membership Applications</button>
      <button class="tablink" onclick="openReport(event, 'events')">Events</button>
      <button class="tablink" onclick="openReport(event, 'clubs')">Clubs</button>
      <button class="tablink" onclick="openReport(event, 'insights')">Other Insights</button>
    </div>

    <div class="date-filter">
      <label for="start-date">Start Date:</label>
      <input type="date" id="start-date" name="start-date">
      <label class="end-date" for="end-date">End Date:</label>
      <input type="date" id="end-date" name="end-date">
    
      <button onclick="filterByDate()">Apply</button>

      <button onclick="cancelFilter()">Remove Filter</button>

      <label class="end-date" for="search-user">Search User:</label>
      <input type="text" id="search-user" name="search-user" onkeyup="searchUser()">

      <select id="regtypefilter" onchange="toggleSection(this.value)">
        <option value="all">All</option>
        <option value="nccregs">NCC Registrations</option>
        <option value="instructorregs">Instructor Registrations</option>
        <option value="clubregs">Club Registrations</option>
      </select>

      <select id="regstatusfilter" onchange="filterStatus(this.value)">
        <option value="all">All</option>
        <option value="Expired">Expired</option>
        <option value="approved">Approved</option>
        <option value="rejected">Rejected</option>
        <option value="under review">Under Review</option>
        <option value="id shipped">ID Shipped</option>
      </select>

      <select id="province-filter" onchange="filterByProvince(this.value)">
        <option value="all">All</option>
        <option value="Pampanga">Pampanga</option>
        <option value="Nueva Ecija">Nueva Ecija</option>
        <option value="Tarlac">Tarlac</option>
        <option value="Bulacan">Bulacan</option>
        <option value="Bataan">Bataan</option>
        <option value="Zambales">Zambales</option>
        <option value="Aurora">Aurora</option>
      </select>

      <script>
        function filterByProvince(selectedProvince) {
          const rows = document.querySelectorAll('#clubs-body tr');
          rows.forEach(row => {
            const province = row.cells[2].innerText.toLowerCase();
            if (selectedProvince === 'all' || province.includes(selectedProvince.toLowerCase())) {
              row.style.display = '';
            } else {
              row.style.display = 'none';
            }
          });
        }
      </script>

      <script>
        function filterStatus(selectedStatus) {
          const rows = document.querySelectorAll('#membership-body tr');
          const selectedCategory = document.querySelector('#regtypefilter').value;

          rows.forEach(row => {
            const status = row.cells[2].innerText.toLowerCase();
            const category = row.cells[0].innerText.toLowerCase();

            const categoryMatch = selectedCategory === 'all' || category.startsWith(selectedCategory);
            const statusMatch = selectedStatus === 'all' || status.includes(selectedStatus.toLowerCase());

            if (categoryMatch && statusMatch) {
              row.style.display = '';
            } else {
              row.style.display = 'none';
            }
          });
        }
      </script>
    </div>

    <div id="payments" class="report-section" style="display:block">
      <h2>Payments/Transactions</h2>
      <div class="report-summary">
        <div class="total-revenue">
          <h3>Total Revenue from Registration Fees:</h3>
          <h2>PHP {{formatMoney membershiptotalrevenue}}</h2>
        </div>
        <div class="total-revenue">
          <h3>Total Fee Payments:</h3>
          <h2>{{transactionsCount}}</h2>
        </div>
        <div class="total-revenue">
          <p>NCC: <strong>{{nccTransactionsCount}}</strong></p>
          <p>Instructor: <strong>{{instructorTransactionsCount}}</strong></p>
          <p>Club: <strong>{{clubTransactionsCount}}</strong></p>
        </div>
      </div>

      <button class="export-csv-btn" onclick="exportTransactionsTableToCSV('payments.csv')">Export to CSV</button>
      <p></p>
      <div class="report-table">
        <table class="transactions-table">
          <thead>
            <tr>
              <th style="position: sticky; top: 0; z-index: 1;">Transaction ID</th>
              <th style="position: sticky; top: 0; z-index: 1;">User</th>
              <th style="position: sticky; top: 0; z-index: 1;">Amount</th>
              <th style="position: sticky; top: 0; z-index: 1;">Type</th>
              <th style="position: sticky; top: 0; z-index: 1; cursor: pointer;" onclick="toggleSort('date')">Date</th>
              <script>
                let sortOrder = 'asc';

                function toggleSort(column) {
                  const rows = Array.from(document.querySelectorAll('#transactions-body tr'));
                  const headers = document.querySelectorAll('.transactions-table th');
                  const dateHeader = Array.from(headers).find(header => header.innerText.toLowerCase().includes('date'));
                  let columnIndex = -1;

                  headers.forEach((header, index) => {
                  if (header.innerText.toLowerCase().includes(column.toLowerCase())) {
                    columnIndex = index;
                  }
                  });

                  if (columnIndex === -1) return;

                  rows.sort((a, b) => {
                  const cellA = a.cells[columnIndex].innerText;
                  const cellB = b.cells[columnIndex].innerText;

                  if (sortOrder === 'asc') {
                    return cellA.localeCompare(cellB);
                  } else {
                    return cellB.localeCompare(cellA);
                  }
                  });

                  sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
                  if (dateHeader) {
                  dateHeader.innerText = `Date ${sortOrder === 'asc' ? '↑' : '↓'}`;
                  }

                  const tbody = document.querySelector('#transactions-body');
                  tbody.innerHTML = '';
                  rows.forEach(row => tbody.appendChild(row));
                }
              </script>
              
            </tr>
          </thead>
          <tbody id="transactions-body">
            {{#each transactions}}
            <tr>
              <td style="position: sticky; top: 0; z-index: 1;">TXN{{id}}</td>
              <td style="position: sticky; top: 0; z-index: 1;">{{name}}</td>
              <td style="position: sticky; top: 0; z-index: 1;">{{amount}}</td>
              <td style="position: sticky; top: 0; z-index: 1;">{{type}}</td>
              <td style="position: sticky; top: 0; z-index: 1;" onclick="toggleApplicationDateSort('date')">{{formatDate created_at "MM/DD/YYYY"}}</td>
              <script>
                let applicationSortOrder = 'asc';

                function toggleApplicationDateSort() {
                  const rows = Array.from(document.querySelectorAll('#membership-body tr'));
                  const headers = document.querySelectorAll('.membership-table th');
                  const dateHeader = Array.from(headers).find(header => header.innerText.toLowerCase().includes('date'));
                  let columnIndex = -1;

                  headers.forEach((header, index) => {
                    if (header.innerText.toLowerCase().includes('date')) {
                      columnIndex = index;
                    }
                  });

                  if (columnIndex === -1) return;

                  rows.sort((a, b) => {
                    const cellA = a.cells[columnIndex].innerText;
                    const cellB = b.cells[columnIndex].innerText;

                    if (applicationSortOrder === 'asc') {
                      return new Date(cellA) - new Date(cellB);
                    } else {
                      return new Date(cellB) - new Date(cellA);
                    }
                  });

                  applicationSortOrder = applicationSortOrder === 'asc' ? 'desc' : 'asc';
                  if (dateHeader) {
                    dateHeader.innerText = `Date ${applicationSortOrder === 'asc' ? '↑' : '↓'}`;
                  }

                  const tbody = document.querySelector('#membership-body');
                  tbody.innerHTML = '';
                  rows.forEach(row => tbody.appendChild(row));
                }
              </script>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>

    <div id="membership" class="report-section" style="display:none">
      <h2>Membership Applications</h2>
      <button class="export-csv-btn" onclick="exportMembershipsTableToCSV('payments.csv')">Export to CSV</button>
      <p></p>
      <div class="report-table">
        <table class="membership-table">
          <thead>
            <tr>
              <th style="position: sticky; top: 0; z-index: 1;">Application ID</th>
              <th style="position: sticky; top: 0; z-index: 1;">Submitted By</th>
              <th style="position: sticky; top: 0; z-index: 1;">Status</th>
              <th style="position: sticky; top: 0; z-index: 1;">Created On</th>
              <th style="position: sticky; top: 0; z-index: 1;">Expires On</th>
            </tr>
          </thead>
          <tbody id="membership-body">
            {{#each nccRegistrations}}
            <tr>
              <td>NCCAPP{{id}}</td>
              <td>{{firstname}} {{lastname}}</td>
              <td>{{{formatStatus status}}}</td>
              <td>{{formatDate created_at "MM/DD/YYYY"}}</td>
              <td>{{formatDate expireson "MM/DD/YYYY"}} <button onclick="location.href='/membership-review/{{id}}'" class="gotoeventbtn">&rarr;</button></td>
            </tr>
            {{/each}}
            {{#each instructorRegistrations}}
            <tr>
              <td>INSAPP{{id}}</td>
              <td>{{firstname}} {{lastname}}</td>
              <td>{{{formatStatus status}}}</td>
              <td>{{formatDate created_at "MM/DD/YYYY"}}</td>
              <td>{{formatDate expireson "MM/DD/YYYY"}} <button onclick="location.href='/instructor-review/{{id}}'" class="gotoeventbtn">&rarr;</button></td>
            </tr>
            {{/each}}
            {{#each clubRegistrations}}
            <tr>
              <td>CLUBAPP{{id}}</td>
              <td>{{firstname}} {{lastname}}</td>
              <td>{{{formatStatus status}}}</td>
              <td>{{formatDate created_at "MM/DD/YYYY"}}</td>
              <td>{{formatDate expireson "MM/DD/YYYY"}} <button onclick="location.href='/clubreg-review/{{id}}'" class="gotoeventbtn">&rarr;</button></td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>

    <div id="events" class="report-section" style="display:none">
      <h2>Upcoming Events</h2>
      <div class="totaleventcount-box">
        Total Event Count:<h3> {{eventsCount}}</h3>
      </div>
      <div class="report-table">
        {{#each eventsByMonth}}
        <h3>{{@key}}</h3>
        <div class="events-list">
          {{#each this}}
          <div class="event-card">
            <h4>{{name}}</h4>
            <p>Date: {{formatDate date "YYYY-MM-DD"}}</p>
            <p>Location: {{location}}</p>
            <p>Description: {{description}}</p>
            <p>Registration Cap: {{registrationcap}}</p>
            <p>Status: {{status}}</p>
            <button onclick="location.href='/events-details/{{id}}'" class="gotoeventbtn">Go to Event</button>
          </div>
          {{/each}}
        </div>
        {{/each}}
      </div>
    </div>

    <div id="clubs" class="report-section" style="display:none">
      <h2>Clubs</h2>
      <button class="export-csv-btn" onclick="exportClubsTableToCSV('clubs.csv')">Export to CSV</button>
      <p></p>
      <div class="report-table">
        <table class="clubs-table">
          <thead>
            <tr>
              <th>Club ID</th>
              <th>Club Name</th>
              <th>Province</th>
              <th>Registeree</th>
              <th>Address</th>
              <th>Date Joined</th>
              <th></th>
            </tr>
          </thead>
          <tbody id="clubs-body">
            {{#each clubs}}
            <tr>
              <td>CLUB{{id}}</td>
              <td>{{clubname}}</td>
              <td>{{province}}</td>
              <td>{{registeree}}</td>
                <td>{{clubaddress}}</td>
                <td>{{formatDate created_at "MM/DD/YYYY"}}</td>
              <td><button onclick="location.href='/clubs-details/{{id}}'" class="gotoclubbtn">Go to Club</button></td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
      <script>
        function exportClubsTableToCSV(filename) {
          var csv = [];
          var rows = document.querySelectorAll(".clubs-table tr");

          for (var i = 0; i < rows.length; i++) {
            if (rows[i].style.display !== 'none') { // Only include visible rows
              var row = [], cols = rows[i].querySelectorAll("td, th");

              for (var j = 0; j < cols.length; j++) {
                row.push(cols[j].innerText);
              }

              csv.push(row.join(","));
            }
          }

          // Download CSV
          var csvFile = new Blob([csv.join("\n")], { type: "text/csv" });
          var downloadLink = document.createElement("a");
          downloadLink.download = filename;
          downloadLink.href = window.URL.createObjectURL(csvFile);
          downloadLink.style.display = "none";
          document.body.appendChild(downloadLink);
          downloadLink.click();
          document.body.removeChild(downloadLink);
        }
      </script>
    </div>

    <div id="insights" class="report-section" style="display:none">
      <h2>Other Insights</h2>

      <h3>Active member type breakdown:</h3>
      <div class="chart-table">
        <div class="chart-container" style="width: 500px; height: 500px;">
          <canvas id="membersChart"></canvas>
        </div>
        <div class="insights-summary">
          <p>Total Members: {{totalMembers}}</p>
          <p>Registered Athletes: {{athleteVerifiedCount}}</p>
          <p>Registered Instructors: {{instructorVerifiedCount}}</p>

          {{!-- athletes and instructors have extra 1 each cuz of admin yohan being instructorverified and
          athleteverified --}}
        </div>
      </div>

      <h3>Membership application type breakdown:</h3>
      <div class="chart-table">
        <div class="chart-container" style="width: 500px; height: 500px;">
          <canvas id="applicationschart"></canvas>
        </div>
        <div class="insights-summary">
          <p>Total Registrations: {{totalRegistrations}}</p>
          <p>Athlete Applications: {{nccRegistrationsCount}}</p>
          <p>Instructor Applications: {{instructorRegistrationsCount}}</p>
          <p>Club Applications: {{clubRegistrationsCount}}</p>
        </div>
      </div>

      <h3>Club location breakdown:</h3>
      <div class="chart-table">
        <div class="chart-container" style="width: 500px; height: 500px;">
          <canvas id="clubsChart"></canvas>
        </div>
        <div class="insights-summary">
          <p>Total Clubs: {{clubsCount}}</p>
        </div>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        var ctx = document.getElementById('membersChart').getContext('2d');
        var membersChart = new Chart(ctx, {
          type: 'doughnut',
          data: {
            labels: ['Active Members', 'Inactive Members'],
            datasets: [{
              data: [120, 30],
              backgroundColor: ['#36A2EB', '#FF6384'],
              hoverBackgroundColor: ['#36A2EB', '#FF6384']
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'bottom',
              }
            }
          }
        });
      });

      document.addEventListener("DOMContentLoaded", function () {
        var ctx = document.getElementById('clubsChart').getContext('2d');
        var clubsChart = new Chart(ctx, {
          type: 'doughnut',
          data: {
            labels: ["Pampanga", "Nueva Ecija", "Tarlac", "Bulacan", "Bataan", "Zambales", "Aurora"],
            datasets: [{
              data: [{{ provinceClubCounts.[0].count }}, {{ provinceClubCounts.[1].count }},{{ provinceClubCounts.[2].count }}, {{ provinceClubCounts.[3].count }}, {{ provinceClubCounts.[4].count }}, {{ provinceClubCounts.[5].count }}, {{ provinceClubCounts.[6].count }}, {{ provinceClubCounts.[7].count }}], // Example data, replace with actual values
        backgroundColor: ['#FFCE56', '#FF6384', '#36A2EB', '#FF9F40', '#4BC0C0', '#9966FF', '#C9CBCF'],
        hoverBackgroundColor: ['#FFCE56', '#FF6384', '#36A2EB', '#FF9F40', '#4BC0C0', '#9966FF', '#C9CBCF']
        }]
          },
        options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'bottom',
          }
        }
      }
        });
      });

      document.addEventListener("DOMContentLoaded", function () {
        var ctx = document.getElementById('applicationschart').getContext('2d');
        var applicationsChart = new Chart(ctx, {
          type: 'doughnut',
          data: {
            labels: ['Athlete Applications', 'Instructor Applications', 'Club Applications'],
            datasets: [{
              data: [{{ nccRegistrationsCount }}, {{ instructorRegistrationsCount }}, {{ clubRegistrationsCount }}],
        backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56'],
        hoverBackgroundColor: ['#36A2EB', '#FF6384', '#FFCE56']
            }]
          },
        options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'bottom',
          }
        }
      }
        });
      });
    </script>

  </div>

  </div>
  <script>
    function toggleDropdown() {
      document.getElementById("dropdown").classList.toggle("show");
    }

    window.onclick = function (event) {
      if (!event.target.matches('.profile-pic img')) {
        var dropdowns = document.getElementsByClassName("dropdown-content");
        for (var i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

    function openReport(evt, reportName) {
      var i, reportSection, tablinks;
      reportSection = document.getElementsByClassName("report-section");
      for (i = 0; i < reportSection.length; i++) {
      reportSection[i].style.display = "none";
      }
      tablinks = document.getElementsByClassName("tablink");
      for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
      }
      document.getElementById(reportName).style.display = "block";
      evt.currentTarget.className += " active";

      // Show or hide date filter based on selected report
      var dateFilter = document.querySelector('.date-filter');
      if (reportName === 'insights' || reportName === 'events') {
      dateFilter.style.display = 'none';
      } else {
      dateFilter.style.display = 'block';
      }

      // Show or hide regtypefilter and regstatusfilter based on selected report
      var regTypeFilter = document.getElementById('regtypefilter');
      var regStatusFilter = document.getElementById('regstatusfilter');
      if (reportName === 'membership') {
      regTypeFilter.style.display = 'inline-block';
      regStatusFilter.style.display = 'inline-block';
      } else {
      regTypeFilter.style.display = 'none';
      regStatusFilter.style.display = 'none';
      }

      // Show or hide province filter based on selected report
      var provinceFilter = document.getElementById('province-filter');
      if (reportName === 'clubs') {
        provinceFilter.style.display = 'inline-block';
      } else {
        provinceFilter.style.display = 'none';
      }

      // Hide other filters when 'clubs' report is selected
      if (reportName === 'clubs') {
        regTypeFilter.style.display = 'none';
        regStatusFilter.style.display = 'none';
      }
    }

    // Show payments/transactions by default
    document.addEventListener("DOMContentLoaded", function () {
      document.querySelector(".tablink").click();
    });

    function filterByDate() {
      const startDate = new Date(document.getElementById('start-date').value);
      const endDate = new Date(document.getElementById('end-date').value);
      const transactions = document.querySelectorAll('#transactions-body tr');
      const memberships = document.querySelectorAll('#membership-body tr');

      transactions.forEach(row => {
        const date = new Date(row.cells[4].innerText);
        if (date >= startDate && date <= endDate) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });

      memberships.forEach(row => {
        const date = new Date(row.cells[3].innerText);
        if (date >= startDate && date <= endDate) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    function searchUser() {
      const input = document.getElementById('search-user').value.toLowerCase();
      const transactions = document.querySelectorAll('#transactions-body tr');
      const memberships = document.querySelectorAll('#membership-body tr');

      transactions.forEach(row => {
        const user = row.cells[1].innerText.toLowerCase();
        if (user.includes(input)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });

      memberships.forEach(row => {
        const user = row.cells[1].innerText.toLowerCase();
        if (user.includes(input)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    function cancelFilter() {
      const transactions = document.querySelectorAll('#transactions-body tr');
      const memberships = document.querySelectorAll('#membership-body tr');

      transactions.forEach(row => {
        row.style.display = '';
      });

      memberships.forEach(row => {
        row.style.display = '';
      });

      document.getElementById('start-date').value = '';
      document.getElementById('end-date').value = '';
    }

    const categoryFilter = document.querySelector('.statusfilter select:nth-child(1)');
    const statusFilter = document.querySelector('.statusfilter select:nth-child(2)');

    function toggleSection(selectedCategory) {
      const rows = document.querySelectorAll('#membership-body tr');
      rows.forEach(row => row.style.display = 'none'); // Hide all rows

      if (selectedCategory === 'nccregs') {
        rows.forEach(row => {
          if (row.cells[0].innerText.startsWith('NCCAPP')) {
            row.style.display = '';
          }
        });
      } else if (selectedCategory === 'instructorregs') {
        rows.forEach(row => {
          if (row.cells[0].innerText.startsWith('INSAPP')) {
            row.style.display = '';
          }
        });
      } else if (selectedCategory === 'clubregs') {
        rows.forEach(row => {
          if (row.cells[0].innerText.startsWith('CLUBAPP')) {
            row.style.display = '';
          }
        });
      } else if (selectedCategory === 'all') {
        rows.forEach(row => row.style.display = '');
      }

      // Reset status filter when switching category
      statusFilter.value = 'all';
      filterStatus('all', selectedCategory);
    }


    statusFilter.addEventListener('change', function () {
      filterStatus(this.value, categoryFilter.value);
    });

    function exportTransactionsTableToCSV(filename) {
      var csv = [];
      var rows = document.querySelectorAll(".transactions-table tr");

      for (var i = 0; i < rows.length; i++) {
        if (rows[i].style.display !== 'none') { // Only include visible rows
          var row = [], cols = rows[i].querySelectorAll("td, th");

          for (var j = 0; j < cols.length; j++) {
            row.push(cols[j].innerText);
          }

          csv.push(row.join(","));
        }
      }

      // Download CSV
      var csvFile = new Blob([csv.join("\n")], { type: "text/csv" });
      var downloadLink = document.createElement("a");
      downloadLink.download = filename;
      downloadLink.href = window.URL.createObjectURL(csvFile);
      downloadLink.style.display = "none";
      document.body.appendChild(downloadLink);
      downloadLink.click();
      document.body.removeChild(downloadLink);
    }

    function exportMembershipsTableToCSV(filename) {
      var csv = [];
      var rows = document.querySelectorAll("#membership-body tr");

      for (var i = 0; i < rows.length; i++) {
        if (rows[i].style.display !== 'none') { // Only include visible rows
          var row = [], cols = rows[i].querySelectorAll("td, th");

          for (var j = 0; j < cols.length; j++) {
            row.push(cols[j].innerText);
          }

          csv.push(row.join(","));
        }
      }

      // Download CSV
      var csvFile = new Blob([csv.join("\n")], { type: "text/csv" });
      var downloadLink = document.createElement("a");
      downloadLink.download = filename;
      downloadLink.href = window.URL.createObjectURL(csvFile);
      downloadLink.style.display = "none";
      document.body.appendChild(downloadLink);
      downloadLink.click();
      document.body.removeChild(downloadLink);
    }


  </script>
</body>
{{else}}
<html>
<body>
  <p>You are not authorized to view this page.</p>
</body>
</html>
{{/if}}

<script src="/scripts/navbar.js"></script>
<script src="/scripts/footer.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>